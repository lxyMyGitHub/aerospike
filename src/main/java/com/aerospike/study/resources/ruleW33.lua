---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lxy_m.
--- DateTime: 2019/12/23 15:14
---

--[[
商户当日交易笔数与过去一个月日均交易笔数的比例大于等于400%
且商户当日交易金额与过去一个月日均交易金额的比例大于等于400%
merchantNumber
amount
xfraudTradeTime
xfraudTradeTime4RA
swiftNumber
]]--

-- 数据模型
--[[
merchantNumberTradeCountDay
merchantNumberTradeCountMonth
merchantNumberAmountCountDay
merchantNumberAmountCountMonth
]]--
local function dataFilter(record)
    result = true
    if record.merchantNumber == "nil" then
        result = false
    end
    if record.amount then
        result = false
    end
    return result
end

local function getData(record)
    local result = map()
    result.amount = record.amount
    result.merchantNumber = record.merchantNumber
    result.xfraudTradeTime = record.xfraudTradeTime
    result.xfraudTradeTime4RA = record.xfraudTradeTime4RA
    return result
end

local function countByMerchantNumber(record)
    local nowTime = os.time() * 1000
    local merchantNumber = record.merchantNumber
    local amount = record.amount
    local millisMonthTime = 30 * 24 * 60 * 60 * 1000
    local millisDayTime = 24 * 60 * 60 * 1000
    local xfraudTradeTime4RA = record.xfraudTradeTime4RA
    local tradeInfo = map()
    tradeInfo.merchantNumber = merchantNumber
    tradeInfo.merchantNumberTradeCountDay = 0
    tradeInfo.merchantNumberTradeCountMonth = 0
    tradeInfo.merchantNumberAmountCountDay = 0
    tradeInfo.merchantNumberAmountCountMonth = 0
    if xfraudTradeTime4RA + millisMonthTime >= nowTime then
        tradeInfo.merchantNumberTradeCountMonth = tradeInfo.merchantNumberTradeCountMonth + 1
        tradeInfo.merchantNumberAmountCountMonth = tradeInfo.merchantNumberAmountCountMonth + amount
    end
    if xfraudTradeTime4RA + millisDayTime >= nowTime then
        tradeInfo.merchantNumberTradeCountDay = tradeInfo.merchantNumberTradeCountDay + 1
        tradeInfo.merchantNumberAmountCountDay = tradeInfo.merchantNumberAmountCountDay + amount
    end
    return tradeInfo
end


local function groupByMerchantNumber(res, item)
    local merchantNumber = item.merchantNumber
    local tradeInfo = res[merchantNumber] or map { merchantNumber = merchantNumber, merchantNumberTradeCountDay = 0, merchantNumberTradeCountMonth = 0,
                                                   merchantNumberAmountCountDay = 0, merchantNumberAmountCountMonth = 0 }
    local merchantNumberTradeCountDay = item.merchantNumberTradeCountDay
    local merchantNumberTradeCountMonth = item.merchantNumberTradeCountMonth
    local merchantNumberAmountCountDay = item.merchantNumberAmountCountDay
    local merchantNumberAmountCountMonth = item.merchantNumberAmountCountMonth
    tradeInfo.merchantNumberTradeCountDay = tradeInfo.merchantNumberTradeCountDay + merchantNumberTradeCountDay
    tradeInfo.merchantNumberTradeCountMonth = tradeInfo.merchantNumberTradeCountMonth + merchantNumberTradeCountMonth
    tradeInfo.merchantNumberAmountCountDay = tradeInfo.merchantNumberAmountCountDay + merchantNumberAmountCountDay
    tradeInfo.merchantNumberAmountCountMonth = tradeInfo.merchantNumberAmountCountMonth + merchantNumberAmountCountMonth
    res[merchantNumber] = tradeInfo
    return res
end


local function mergeMap(current, next)
    current.trade0_5count = current.trade0_5count + next.trade0_5count
    current.tradeCount24Hour = current.tradeCount24Hour + next.tradeCount24Hour
    current.amount5000Count = current.amount5000Count + next.amount5000Count
    current.amount1000Count = current.amount1000Count + next.amount1000Count
    current.tradeCount30Days = current.tradeCount30Days + next.tradeCount30Days
    return current;
end

local function reduceByMerchantId(current, next)
    return map.merge(current, next, mergeMap)
end

function ruleW33(stream)
    return stream:filter(dataFilter):map(getData):map(countByMerchantNumber):aggregate(map(), groupByMerchantNumber):reduce(reduceByMerchantId)
end
